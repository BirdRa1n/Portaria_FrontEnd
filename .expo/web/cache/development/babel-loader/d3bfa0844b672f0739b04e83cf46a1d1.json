{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport { Box, Center, Heading, HStack, NativeBaseProvider, View, VStack, Image, FlatList, Text, Spacer, Avatar, Button, Select, CheckIcon, useDisclose, Actionsheet, Divider } from \"native-base\";\nimport { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction jajjs() {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Details\",\n      onPress: function onPress() {\n        navigation.navigate(\"Historico\", {\n          itemId: 86,\n          otherParam: \"anything you want here\"\n        });\n      }\n    })]\n  });\n}\n\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      HomeKeyList = _React$useState2[0],\n      setHomeKeyList = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isRefreshing = _React$useState4[0],\n      setIsRefreshing = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      ActionsheetHallInfo = _React$useState6[0],\n      setActionsheetHallInfo = _React$useState6[1];\n\n  function getKeys() {\n    axios.get(\"http://192.168.1.15:10004/portaria/keys\", {\n      params: {\n        filter: \"free\"\n      }\n    }).then(function (response) {\n      setHomeKeyList(response.data);\n      console.log(response.data[1]);\n    });\n  }\n\n  useEffect(function () {\n    getKeys();\n  }, []);\n\n  var onRefresh = function onRefresh() {\n    setIsRefreshing(true);\n    getKeys();\n    setIsRefreshing(false);\n  };\n\n  var _useDisclose = useDisclose(),\n      isOpen = _useDisclose.isOpen,\n      onOpen = _useDisclose.onOpen,\n      onClose = _useDisclose.onClose;\n\n  function ActionSheetRequestKey(hall, description, status, conveyer) {\n    onOpen();\n    var info = {\n      hall: hall,\n      description: description,\n      status: status,\n      conveyer: conveyer,\n      conveyer: conveyer\n    };\n    setActionsheetHallInfo(info);\n  }\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      w: \"100%\",\n      h: \"100%\",\n      bg: 'light.100',\n      children: [_jsx(Box, {\n        p: 2,\n        safeArea: true,\n        shadow: 1,\n        children: _jsxs(HStack, {\n          children: [_jsx(Image, {\n            source: {\n              uri: \"https://pbs.twimg.com/profile_images/438771627854024704/Az4OY07a_400x400.png\"\n            },\n            alt: \"Alternate Text\",\n            size: \"sm\"\n          }), _jsxs(Center, {\n            marginLeft: '18%',\n            children: [_jsx(Button, {\n              onPress: function onPress() {\n                return alert('Leitura de QRCode ainda não está disponível');\n              },\n              w: 75,\n              h: 51,\n              bg: 'green.500',\n              colorScheme: 'green',\n              startIcon: _jsx(AntDesign, {\n                name: \"qrcode\",\n                size: 40,\n                color: \"black\"\n              })\n            }), _jsx(Text, {\n              children: \"Checkar QRCode\"\n            })]\n          })]\n        })\n      }), _jsx(FlatList, {\n        onRefresh: onRefresh,\n        refreshing: isRefreshing,\n        w: '95%',\n        h: '80%',\n        numColumns: 3,\n        columnWrapperStyle: {\n          flex: 1,\n          justifyContent: \"space-around\",\n          marginLeft: 10,\n          marginBottom: 10\n        },\n        marginTop: 2,\n        showsVerticalScrollIndicator: false,\n        data: HomeKeyList,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return ActionSheetRequestKey(item.hall, item.description, item.status, item.conveyer);\n            },\n            children: _jsx(Box, {\n              marginBottom: 1,\n              alignItems: 'center',\n              bg: \"light.50\",\n              borderRadius: 5,\n              w: 16,\n              h: 59,\n              p: 1,\n              shadow: 1,\n              children: _jsx(HStack, {\n                children: _jsxs(VStack, {\n                  children: [_jsx(Heading, {\n                    size: \"sm\",\n                    children: \"Sala\"\n                  }), _jsx(Heading, {\n                    children: item.hall\n                  })]\n                })\n              })\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }), _jsx(Center, {\n        children: _jsx(Actionsheet, {\n          isOpen: isOpen,\n          onClose: onClose,\n          children: _jsx(Actionsheet.Content, {\n            children: _jsxs(Box, {\n              w: \"100%\",\n              px: 4,\n              justifyContent: \"center\",\n              children: [_jsxs(Heading, {\n                fontSize: 18,\n                children: [\"Deseja solicitar a chave da sala \", ActionsheetHallInfo.hall, \"?\"]\n              }), _jsx(Text, {\n                marginBottom: 21,\n                fontSize: 'md',\n                children: ActionsheetHallInfo.description\n              }), _jsx(Center, {\n                marginBottom: 50,\n                children: _jsxs(HStack, {\n                  space: 2,\n                  children: [_jsx(Button, {\n                    onPress: function onPress() {\n                      return alert('Você não tem permissão para solicitar chaves OK?');\n                    },\n                    w: 120,\n                    bg: 'green.700',\n                    colorScheme: 'green',\n                    children: \"Sim\"\n                  }), _jsx(Button, {\n                    onPress: function onPress() {\n                      return onClose(false);\n                    },\n                    w: 120,\n                    bg: 'white',\n                    shadow: 1,\n                    _text: {\n                      color: 'black'\n                    },\n                    colorScheme: 'red',\n                    children: \"N\\xE3o\"\n                  })]\n                })\n              })]\n            })\n          })\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/Portaria_FrontEnd/screens/HomeScreen.js"],"names":["React","Box","Center","Heading","HStack","NativeBaseProvider","View","VStack","Image","FlatList","Text","Spacer","Avatar","Button","Select","CheckIcon","useDisclose","Actionsheet","Divider","useState","useEffect","AntDesign","axios","jajjs","flex","alignItems","justifyContent","navigation","navigate","itemId","otherParam","HomeScreen","HomeKeyList","setHomeKeyList","isRefreshing","setIsRefreshing","ActionsheetHallInfo","setActionsheetHallInfo","getKeys","get","params","filter","then","response","data","console","log","onRefresh","isOpen","onOpen","onClose","ActionSheetRequestKey","hall","description","status","conveyer","info","uri","alert","marginLeft","marginBottom","item","id","color"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Center,\n  Heading,\n  HStack,\n  NativeBaseProvider,\n  View,\n  VStack,\n  Image,\n  FlatList,\n  Text,\n  Spacer,\n  Avatar,\n  Button,\n  Select,\n  CheckIcon,\n  useDisclose,\n  Actionsheet,\n  Divider\n} from \"native-base\";\nimport { useState, useEffect } from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { AntDesign } from '@expo/vector-icons';\nimport axios from 'axios';\n\n\n\nfunction jajjs() {\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Home Screen</Text>\n      <Button\n        title=\"Go to Details\"\n        onPress={() => {\n          /* 1. Navigate to the Details route with params */\n          navigation.navigate(\"Historico\", {\n            itemId: 86,\n            otherParam: \"anything you want here\",\n          });\n        }}\n      />\n    </View>\n  );\n}\n\n\nexport default function HomeScreen({ navigation }) {\n  let [HomeKeyList, setHomeKeyList] = React.useState(\"\");\n  let [isRefreshing, setIsRefreshing] = React.useState(false);\n  let [ActionsheetHallInfo, setActionsheetHallInfo] = React.useState(\"\");\n\n\n\n\n  function getKeys() {\n    axios\n      .get(\"http://192.168.1.15:10004/portaria/keys\", {\n        params: {\n          filter: \"free\"\n        },\n      })\n      .then(function (response) {\n        setHomeKeyList(response.data);\n        console.log(response.data[1])\n      });\n\n  }\n  useEffect(() => {\n    getKeys();\n  }, []);\n  const onRefresh = () => {\n    setIsRefreshing(true)\n    getKeys()\n    setIsRefreshing(false)\n  }\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclose();\n\n\n  function ActionSheetRequestKey(hall, description, status, conveyer) {\n    onOpen()\n    const info = {\n      hall: hall,\n      description: description,\n      status: status,\n      conveyer, conveyer\n    }\n    setActionsheetHallInfo(info)\n  }\n\n\n  return (\n    <NativeBaseProvider>\n      <View w={\"100%\"} h={\"100%\"} bg={'light.100'}>\n        <Box p={2} safeArea shadow={1}>\n          <HStack>\n            <Image source={{\n              uri: \"https://pbs.twimg.com/profile_images/438771627854024704/Az4OY07a_400x400.png\"\n            }} alt=\"Alternate Text\" size=\"sm\" />\n            <Center marginLeft={'18%'}>\n              <Button onPress={() => alert('Leitura de QRCode ainda não está disponível')} w={75} h={51} bg={'green.500'} colorScheme={'green'} startIcon={<AntDesign name=\"qrcode\" size={40} color=\"black\" />}></Button>\n              <Text>Checkar QRCode</Text>\n            </Center>\n          </HStack>\n\n        </Box>\n\n\n\n\n        <FlatList\n          onRefresh={onRefresh}\n          refreshing={isRefreshing}\n\n\n          w={'95%'}\n          h={'80%'}\n          numColumns={3}\n          columnWrapperStyle={{\n            flex: 1,\n            justifyContent: \"space-around\",\n            marginLeft: 10,\n            marginBottom: 10\n          }}\n          marginTop={2}\n          showsVerticalScrollIndicator={false}\n          data={HomeKeyList}\n          renderItem={({ item }) => (\n            <TouchableOpacity onPress={() => ActionSheetRequestKey(item.hall, item.description, item.status, item.conveyer)}>\n              <Box marginBottom={1} alignItems={'center'} bg={\"light.50\"} borderRadius={5} w={16} h={59} p={1} shadow={1}>\n                <HStack>\n                  <VStack>\n                    <Heading size={\"sm\"}>\n                      Sala\n                    </Heading>\n                    <Heading>\n                      {item.hall}\n                    </Heading>\n                  </VStack>\n                </HStack>\n              </Box>\n            </TouchableOpacity>\n          )}\n          keyExtractor={(item) => item.id}\n        />\n\n\n\n        <Center>\n          <Actionsheet isOpen={isOpen} onClose={onClose}>\n            <Actionsheet.Content>\n              <Box w=\"100%\" px={4} justifyContent=\"center\">\n                <Heading fontSize={18}>Deseja solicitar a chave da sala {ActionsheetHallInfo.hall}?</Heading>\n                <Text marginBottom={21} fontSize={'md'}>{ActionsheetHallInfo.description}</Text>\n                <Center marginBottom={50}>\n                  <HStack space={2}>\n                    <Button onPress={() => alert('Você não tem permissão para solicitar chaves OK?')} w={120} bg={'green.700'} colorScheme={'green'}>Sim</Button>\n                    <Button onPress={() => onClose(false)} w={120} bg={'white'} shadow={1} _text={{ color: 'black' }} colorScheme={'red'}>Não</Button>\n                  </HStack>\n                </Center>\n              </Box>\n\n            </Actionsheet.Content>\n          </Actionsheet>\n        </Center>\n\n      </View>\n    </NativeBaseProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}