{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport { Box, Center, Heading, HStack, NativeBaseProvider, View, VStack, Image, FlatList, Text, Spacer, Avatar, Button, Select, CheckIcon } from \"native-base\";\nimport { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction jajjs() {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(Button, {\n      title: \"Go to Details\",\n      onPress: function onPress() {\n        navigation.navigate(\"Historico\", {\n          itemId: 86,\n          otherParam: \"anything you want here\"\n        });\n      }\n    })]\n  });\n}\n\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      HomeKeyList = _React$useState2[0],\n      setHomeKeyList = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isRefreshing = _React$useState4[0],\n      setIsRefreshing = _React$useState4[1];\n\n  function getChaves() {\n    axios.get(\"http://192.168.1.15:10004/portaria/chaves\", {\n      params: {\n        validas: \"true\"\n      }\n    }).then(function (response) {\n      setHomeKeyList(response.data);\n      console.log(response.data[1]);\n    });\n  }\n\n  useEffect(function () {\n    getChaves();\n  }, []);\n\n  var onRefresh = function onRefresh() {\n    setIsRefreshing(true);\n    getChaves();\n    setIsRefreshing(false);\n  };\n\n  function SolicitarChave(Sala) {\n    alert(Sala);\n  }\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      w: \"100%\",\n      h: \"100%\",\n      bg: 'light.100',\n      children: [_jsx(Box, {\n        p: 2,\n        safeArea: true,\n        children: _jsxs(Center, {\n          children: [_jsx(Button, {\n            w: 75,\n            bg: 'green.500',\n            colorScheme: 'green',\n            startIcon: _jsx(AntDesign, {\n              name: \"qrcode\",\n              size: 40,\n              color: \"black\"\n            })\n          }), _jsx(Text, {\n            children: \"Checkar QRCode\"\n          })]\n        })\n      }), _jsx(Center, {\n        children: _jsx(Heading, {\n          size: 'sm',\n          marginBottom: 2,\n          children: \"Salas dispon\\xEDveis\"\n        })\n      }), _jsx(FlatList, {\n        onRefresh: onRefresh,\n        refreshing: isRefreshing,\n        w: '95%',\n        h: '80%',\n        numColumns: 3,\n        columnWrapperStyle: {\n          flex: 1,\n          justifyContent: \"space-around\",\n          marginLeft: 10,\n          marginBottom: 10\n        },\n        marginTop: 2,\n        showsVerticalScrollIndicator: false,\n        data: HomeKeyList,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return SolicitarChave(item.Sala);\n            },\n            children: _jsx(View, {\n              marginBottom: 1,\n              alignItems: 'center',\n              bg: \"light.50\",\n              borderRadius: 5,\n              w: 16,\n              h: 59,\n              p: 1,\n              shadow: 0.9,\n              children: _jsx(HStack, {\n                children: _jsxs(VStack, {\n                  children: [_jsx(Heading, {\n                    size: \"sm\",\n                    children: \"Sala\"\n                  }), _jsx(Heading, {\n                    children: item.Sala\n                  })]\n                })\n              })\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/dariojr/Documents/GitHub/Portaria_FrontEnd/screens/HomeScreen.js"],"names":["React","Box","Center","Heading","HStack","NativeBaseProvider","View","VStack","Image","FlatList","Text","Spacer","Avatar","Button","Select","CheckIcon","useState","useEffect","AntDesign","axios","jajjs","flex","alignItems","justifyContent","navigation","navigate","itemId","otherParam","HomeScreen","HomeKeyList","setHomeKeyList","isRefreshing","setIsRefreshing","getChaves","get","params","validas","then","response","data","console","log","onRefresh","SolicitarChave","Sala","alert","marginLeft","marginBottom","item","id"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Center,\n  Heading,\n  HStack,\n  NativeBaseProvider,\n  View,\n  VStack,\n  Image,\n  FlatList,\n  Text,\n  Spacer,\n  Avatar,\n  Button,\n  Select,\n  CheckIcon,\n} from \"native-base\";\nimport { useState, useEffect } from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { AntDesign } from '@expo/vector-icons';\nimport axios from 'axios';\n\n\n\nfunction jajjs() {\n  return (\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      <Text>Home Screen</Text>\n      <Button\n        title=\"Go to Details\"\n        onPress={() => {\n          /* 1. Navigate to the Details route with params */\n          navigation.navigate(\"Historico\", {\n            itemId: 86,\n            otherParam: \"anything you want here\",\n          });\n        }}\n      />\n    </View>\n  );\n}\n\n\nexport default function HomeScreen({ navigation }) {\n  let [HomeKeyList, setHomeKeyList] = React.useState(\"\");\n  let [isRefreshing, setIsRefreshing] = React.useState(false);\n\n\n\n\n  function getChaves() {\n    axios\n      .get(\"http://192.168.1.15:10004/portaria/chaves\", {\n        params: {\n          validas: \"true\"\n        },\n      })\n      .then(function (response) {\n        setHomeKeyList(response.data);\n        console.log(response.data[1])\n      });\n\n  }\n  useEffect(() => {\n    getChaves();\n  }, []);\n  const onRefresh = () => {\n    setIsRefreshing(true)\n    getChaves()\n    setIsRefreshing(false)\n}\n\n  function SolicitarChave(Sala) {\n    alert(Sala)\n  }\n\n\n  return (\n    <NativeBaseProvider>\n      <View w={\"100%\"} h={\"100%\"} bg={'light.100'}>\n        <Box p={2} safeArea>\n          <Center>\n            <Button w={75} bg={'green.500'} colorScheme={'green'} startIcon={<AntDesign name=\"qrcode\" size={40} color=\"black\" />}></Button>\n            <Text>Checkar QRCode</Text>\n          </Center>\n        </Box>\n        <Center>\n          <Heading size={'sm'} marginBottom={2}>\n            Salas disponíveis\n          </Heading>\n        </Center>\n\n\n\n        <FlatList\n         onRefresh={onRefresh}\n         refreshing={isRefreshing}\n\n\n          w={'95%'}\n          h={'80%'}\n          numColumns={3}\n          columnWrapperStyle={{\n            flex: 1,\n            justifyContent: \"space-around\",\n            marginLeft: 10,\n            marginBottom: 10\n          }}\n          marginTop={2}\n          showsVerticalScrollIndicator={false}\n          data={HomeKeyList}\n          renderItem={({ item }) => (\n            <TouchableOpacity onPress={() => SolicitarChave(item.Sala)}>\n              <View marginBottom={1} alignItems={'center'} bg={\"light.50\"} borderRadius={5} w={16} h={59} p={1} shadow={0.9}>\n                <HStack>\n                  <VStack>\n                    <Heading size={\"sm\"}>\n                      Sala\n                    </Heading>\n                    <Heading>\n                      {item.Sala}\n                    </Heading>\n                  </VStack>\n                </HStack>\n              </View>\n            </TouchableOpacity>\n          )}\n          keyExtractor={(item) => item.id}\n        />\n\n\n\n      </View>\n    </NativeBaseProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}