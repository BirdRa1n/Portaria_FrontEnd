{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Solicitacoes from \"./screens/Solicitacoes\";\nimport { Account } from \"./screens/Account\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Login from \"./screens/Login\";\nimport { SSRProvider } from '@react-aria/ssr';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\n\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Chaves') {\n            iconName = focused ? 'ios-home-outline' : 'ios-home-sharp';\n          } else if (route.name === 'Solicitações') {\n            iconName = focused ? 'ios-list' : 'ios-list';\n          } else if (route.name === 'Account') {\n            iconName = focused ? 'user' : 'user';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'green',\n        tabBarInactiveTintColor: 'black'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Chaves\",\n      component: HomeScreen,\n      options: {\n        headerShown: false,\n        headerTitle: 'Portaria'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Solicita\\xE7\\xF5es\",\n      component: Solicitacoes\n    }), _jsx(Tab.Screen, {\n      name: \"Account\",\n      component: Account\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsx(SSRProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        initialRouteName: Login,\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"HomeScreen\",\n          component: Home\n        }), _jsx(Stack.Screen, {\n          name: \"Solicita\\xE7\\xF5es\",\n          component: Solicitacoes\n        }), _jsx(Stack.Screen, {\n          name: \"Account\",\n          component: Account\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","HomeScreen","Solicitacoes","Account","createBottomTabNavigator","Ionicons","Login","SSRProvider","Tab","Stack","Home","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","headerTitle","App"],"sources":["/Users/dariojr/Documents/GitHub/Portaria_FrontEnd/App.js"],"sourcesContent":["import * as React from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from './screens/HomeScreen';\nimport Solicitacoes from './screens/Solicitacoes';\nimport { Account } from './screens/Account';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport Login from './screens/Login';\nimport { SSRProvider } from '@react-aria/ssr'\n\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\nfunction Home() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === 'Chaves') {\n            iconName = focused\n              ? 'ios-home-outline'\n              : 'ios-home-sharp';\n          } else if (route.name === 'Solicitações') {\n            iconName = focused ? 'ios-list' : 'ios-list';\n          } else if (route.name === 'Account') {\n            iconName = focused ? 'user' : 'user';\n          }\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: 'green',\n        tabBarInactiveTintColor: 'black',\n      })}\n    >\n      <Tab.Screen name=\"Chaves\" component={HomeScreen} options={{ headerShown: false, headerTitle: 'Portaria' }} />\n      <Tab.Screen name=\"Solicitações\" component={Solicitacoes} />\n      <Tab.Screen name=\"Account\" component={Account} ></Tab.Screen>\n    </Tab.Navigator>\n  );\n}\nexport default function App() {\n  return (\n    <SSRProvider>\n      <NavigationContainer>\n        <Stack.Navigator screenOptions={{ headerShown: false }} initialRouteName={Login}>\n          <Stack.Screen name=\"Login\" component={Login} />\n          <Stack.Screen name=\"HomeScreen\" component={Home} />\n          <Stack.Screen name=\"Solicitações\" component={Solicitacoes} />\n          <Stack.Screen name=\"Account\" component={Account} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SSRProvider>\n  );\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,SAASC,OAAT;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP;AACA,SAASC,WAAT,QAA4B,iBAA5B;;;AAGA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;AACA,IAAMK,KAAK,GAAGT,0BAA0B,EAAxC;;AAEA,SAASU,IAAT,GAAgB;EACd,OACE,MAAC,GAAD,CAAK,SAAL;IACE,aAAa,EAAE;MAAA,IAAGC,KAAH,QAAGA,KAAH;MAAA,OAAgB;QAC7BC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;UAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;UAAA,IAAXC,IAAW,SAAXA,IAAW;UACxC,IAAIC,QAAJ;;UAEA,IAAIL,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;YAC3BD,QAAQ,GAAGH,OAAO,GACd,kBADc,GAEd,gBAFJ;UAGD,CAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,cAAnB,EAAmC;YACxCD,QAAQ,GAAGH,OAAO,GAAG,UAAH,GAAgB,UAAlC;UACD,CAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;YACnCD,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,MAA9B;UACD;;UACD,OAAO,KAAC,QAAD;YAAU,IAAI,EAAEG,QAAhB;YAA0B,IAAI,EAAED,IAAhC;YAAsC,KAAK,EAAED;UAA7C,EAAP;QACD,CAd4B;QAe7BI,qBAAqB,EAAE,OAfM;QAgB7BC,uBAAuB,EAAE;MAhBI,CAAhB;IAAA,CADjB;IAAA,WAoBE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,QAAjB;MAA0B,SAAS,EAAElB,UAArC;MAAiD,OAAO,EAAE;QAAEmB,WAAW,EAAE,KAAf;QAAsBC,WAAW,EAAE;MAAnC;IAA1D,EApBF,EAqBE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,oBAAjB;MAAgC,SAAS,EAAEnB;IAA3C,EArBF,EAsBE,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,SAAjB;MAA2B,SAAS,EAAEC;IAAtC,EAtBF;EAAA,EADF;AA0BD;;AACD,eAAe,SAASmB,GAAT,GAAe;EAC5B,OACE,KAAC,WAAD;IAAA,UACE,KAAC,mBAAD;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QAAiB,aAAa,EAAE;UAAEF,WAAW,EAAE;QAAf,CAAhC;QAAwD,gBAAgB,EAAEd,KAA1E;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,OAAnB;UAA2B,SAAS,EAAEA;QAAtC,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,YAAnB;UAAgC,SAAS,EAAEI;QAA3C,EAFF,EAGE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,oBAAnB;UAAkC,SAAS,EAAER;QAA7C,EAHF,EAIE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,SAAnB;UAA6B,SAAS,EAAEC;QAAxC,EAJF;MAAA;IADF;EADF,EADF;AAYD"},"metadata":{},"sourceType":"module"}