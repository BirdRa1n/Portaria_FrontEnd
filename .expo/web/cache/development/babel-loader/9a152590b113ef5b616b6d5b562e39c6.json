{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from \"react\";\nimport { Box, Center, Heading, HStack, NativeBaseProvider, View, VStack, Image, FlatList, Text, Spacer, Avatar, Button, Select, CheckIcon, useDisclose, Actionsheet, Divider } from \"native-base\";\nimport { useState, useEffect } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataUser = _React$useState2[0],\n      setdataUser = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      HomeKeyList = _React$useState4[0],\n      setHomeKeyList = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isRefreshing = _React$useState6[0],\n      setIsRefreshing = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      ActionsheetHallInfo = _React$useState8[0],\n      setActionsheetHallInfo = _React$useState8[1];\n\n  function getKeys() {\n    axios.get(\"http://192.168.1.10:10004/api/keys/list\", {\n      params: {\n        filter: \"all\"\n      }\n    }).then(function (response) {\n      setHomeKeyList(response.data);\n      console.log(response.data[1]);\n    });\n  }\n\n  var getDataUser = function getDataUser() {\n    var jsonValue;\n    return _regeneratorRuntime.async(function getDataUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@data_user'));\n\n          case 3:\n            jsonValue = _context.sent;\n            return _context.abrupt(\"return\", setdataUser(jsonValue != null ? JSON.parse(jsonValue) : null));\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  console.log(JSON.stringify(dataUser));\n  useEffect(function () {\n    getKeys();\n    getDataUser();\n  }, []);\n\n  var onRefresh = function onRefresh() {\n    setIsRefreshing(true);\n    getKeys();\n    setIsRefreshing(false);\n  };\n\n  var _useDisclose = useDisclose(),\n      isOpen = _useDisclose.isOpen,\n      onOpen = _useDisclose.onOpen,\n      onClose = _useDisclose.onClose;\n\n  function ActionSheetRequestKey(hall, description, status, conveyer) {\n    onOpen();\n    var info = {\n      hall: hall,\n      description: description,\n      status: status,\n      conveyer: conveyer,\n      conveyer: conveyer\n    };\n    setActionsheetHallInfo(info);\n  }\n\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(View, {\n      w: \"100%\",\n      h: \"100%\",\n      bg: 'light.100',\n      children: [_jsx(Box, {\n        p: 2,\n        safeArea: true,\n        shadow: 1,\n        children: _jsxs(HStack, {\n          children: [_jsx(Image, {\n            source: {\n              uri: \"https://pbs.twimg.com/profile_images/438771627854024704/Az4OY07a_400x400.png\"\n            },\n            alt: \"Alternate Text\",\n            size: \"sm\"\n          }), _jsxs(Center, {\n            marginLeft: '18%',\n            children: [_jsx(Button, {\n              onPress: function onPress() {\n                return alert('Leitura de QRCode ainda não está disponível');\n              },\n              w: 75,\n              h: 51,\n              bg: 'green.500',\n              colorScheme: 'green',\n              startIcon: _jsx(AntDesign, {\n                name: \"qrcode\",\n                size: 40,\n                color: \"black\"\n              })\n            }), _jsx(Text, {\n              children: \"Checkar QRCode\"\n            })]\n          })]\n        })\n      }), _jsx(FlatList, {\n        onRefresh: onRefresh,\n        refreshing: isRefreshing,\n        w: '95%',\n        h: '80%',\n        numColumns: 3,\n        columnWrapperStyle: {\n          flex: 1,\n          justifyContent: \"space-around\",\n          marginLeft: 10,\n          marginBottom: 10\n        },\n        marginTop: 2,\n        showsVerticalScrollIndicator: false,\n        data: HomeKeyList,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return ActionSheetRequestKey(item.hall, item.description, item.status, item.conveyer);\n            },\n            children: _jsx(Box, {\n              marginBottom: 1,\n              alignItems: 'center',\n              bg: \"light.50\",\n              borderRadius: 5,\n              w: 16,\n              h: 59,\n              p: 1,\n              shadow: 1,\n              children: _jsx(HStack, {\n                children: _jsxs(VStack, {\n                  children: [_jsx(Heading, {\n                    size: \"sm\",\n                    children: \"Sala\"\n                  }), _jsx(Heading, {\n                    children: item.hall\n                  })]\n                })\n              })\n            })\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }), _jsx(Center, {\n        children: _jsx(Actionsheet, {\n          isOpen: isOpen,\n          onClose: onClose,\n          children: _jsx(Actionsheet.Content, {\n            children: _jsxs(Box, {\n              w: \"100%\",\n              px: 4,\n              justifyContent: \"center\",\n              children: [_jsxs(Heading, {\n                fontSize: 18,\n                children: [\"Deseja solicitar a chave da sala \", ActionsheetHallInfo.hall, \"?\"]\n              }), _jsx(Text, {\n                marginBottom: 21,\n                fontSize: 'md',\n                children: ActionsheetHallInfo.description\n              }), _jsx(Center, {\n                marginBottom: 50,\n                children: _jsxs(HStack, {\n                  space: 2,\n                  children: [_jsx(Button, {\n                    onPress: function onPress() {\n                      return alert('Você não tem permissão para solicitar chaves OK?');\n                    },\n                    w: 120,\n                    bg: 'green.700',\n                    colorScheme: 'green',\n                    children: \"Sim\"\n                  }), _jsx(Button, {\n                    onPress: function onPress() {\n                      return onClose(false);\n                    },\n                    w: 120,\n                    bg: 'white',\n                    shadow: 1,\n                    _text: {\n                      color: 'black'\n                    },\n                    colorScheme: 'red',\n                    children: \"N\\xE3o\"\n                  })]\n                })\n              })]\n            })\n          })\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Box","Center","Heading","HStack","NativeBaseProvider","View","VStack","Image","FlatList","Text","Spacer","Avatar","Button","Select","CheckIcon","useDisclose","Actionsheet","Divider","useState","useEffect","AntDesign","axios","HomeScreen","route","navigation","dataUser","setdataUser","HomeKeyList","setHomeKeyList","isRefreshing","setIsRefreshing","ActionsheetHallInfo","setActionsheetHallInfo","getKeys","get","params","filter","then","response","data","console","log","getDataUser","AsyncStorage","getItem","jsonValue","JSON","parse","stringify","onRefresh","isOpen","onOpen","onClose","ActionSheetRequestKey","hall","description","status","conveyer","info","uri","alert","flex","justifyContent","marginLeft","marginBottom","item","id","color"],"sources":["/Users/dariojr/Documents/GitHub/Portaria_FrontEnd/screens/HomeScreen.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Center,\n  Heading,\n  HStack,\n  NativeBaseProvider,\n  View,\n  VStack,\n  Image,\n  FlatList,\n  Text,\n  Spacer,\n  Avatar,\n  Button,\n  Select,\n  CheckIcon,\n  useDisclose,\n  Actionsheet,\n  Divider\n} from \"native-base\";\nimport { useState, useEffect } from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { AntDesign } from '@expo/vector-icons';\nimport axios from 'axios';\n\n\n\n\n\n\nexport default function HomeScreen({ route, navigation }) {\n\n  const [dataUser, setdataUser] = React.useState({});\n  let [HomeKeyList, setHomeKeyList] = React.useState(\"\");\n  let [isRefreshing, setIsRefreshing] = React.useState(false);\n  let [ActionsheetHallInfo, setActionsheetHallInfo] = React.useState(\"\");\n\n\n\n\n  function getKeys() {\n    axios\n      .get(\"http://192.168.1.10:10004/api/keys/list\", {\n        params: {\n          filter: \"all\"\n        },\n      })\n      .then(function (response) {\n        setHomeKeyList(response.data);\n        console.log(response.data[1])\n      });\n  }\n\n  const getDataUser = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('@data_user')\n      return setdataUser(jsonValue != null ? JSON.parse(jsonValue) : null);\n\n    } catch(e) {\n      // error reading value\n    }\n  }\n  console.log(JSON.stringify(dataUser))\n\n  useEffect(() => {\n    getKeys();\n    getDataUser();\n  }, []);\n  const onRefresh = () => {\n    setIsRefreshing(true)\n    getKeys()\n    setIsRefreshing(false)\n  }\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclose();\n\n\n  function ActionSheetRequestKey(hall, description, status, conveyer) {\n    onOpen()\n    const info = {\n      hall: hall,\n      description: description,\n      status: status,\n      conveyer, conveyer\n    }\n    setActionsheetHallInfo(info)\n  }\n\n\n  return (\n    <NativeBaseProvider>\n      <View w={\"100%\"} h={\"100%\"} bg={'light.100'}>\n        <Box p={2} safeArea shadow={1}>\n          <HStack>\n            <Image source={{\n              uri: \"https://pbs.twimg.com/profile_images/438771627854024704/Az4OY07a_400x400.png\"\n            }} alt=\"Alternate Text\" size=\"sm\" />\n            <Center marginLeft={'18%'}>\n              <Button onPress={() => alert('Leitura de QRCode ainda não está disponível')} w={75} h={51} bg={'green.500'} colorScheme={'green'} startIcon={<AntDesign name=\"qrcode\" size={40} color=\"black\" />}></Button>\n              <Text>Checkar QRCode</Text>\n            </Center>\n          </HStack>\n\n        </Box>\n\n\n\n\n        <FlatList\n          onRefresh={onRefresh}\n          refreshing={isRefreshing}\n\n\n          w={'95%'}\n          h={'80%'}\n          numColumns={3}\n          columnWrapperStyle={{\n            flex: 1,\n            justifyContent: \"space-around\",\n            marginLeft: 10,\n            marginBottom: 10\n          }}\n          marginTop={2}\n          showsVerticalScrollIndicator={false}\n          data={HomeKeyList}\n          renderItem={({ item }) => (\n            <TouchableOpacity onPress={() => ActionSheetRequestKey(item.hall, item.description, item.status, item.conveyer)}>\n              <Box marginBottom={1} alignItems={'center'} bg={\"light.50\"} borderRadius={5} w={16} h={59} p={1} shadow={1}>\n                <HStack>\n                  <VStack>\n                    <Heading size={\"sm\"}>\n                      Sala\n                    </Heading>\n                    <Heading>\n                      {item.hall}\n                    </Heading>\n                  </VStack>\n                </HStack>\n              </Box>\n            </TouchableOpacity>\n          )}\n          keyExtractor={(item) => item.id}\n        />\n\n\n\n        <Center>\n          <Actionsheet isOpen={isOpen} onClose={onClose}>\n            <Actionsheet.Content>\n              <Box w=\"100%\" px={4} justifyContent=\"center\">\n                <Heading fontSize={18}>Deseja solicitar a chave da sala {ActionsheetHallInfo.hall}?</Heading>\n                <Text marginBottom={21} fontSize={'md'}>{ActionsheetHallInfo.description}</Text>\n                <Center marginBottom={50}>\n                  <HStack space={2}>\n                    <Button onPress={() => alert('Você não tem permissão para solicitar chaves OK?')} w={120} bg={'green.700'} colorScheme={'green'}>Sim</Button>\n                    <Button onPress={() => onClose(false)} w={120} bg={'white'} shadow={1} _text={{ color: 'black' }} colorScheme={'red'}>Não</Button>\n                  </HStack>\n                </Center>\n              </Box>\n\n            </Actionsheet.Content>\n          </Actionsheet>\n        </Center>\n\n      </View>\n    </NativeBaseProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}